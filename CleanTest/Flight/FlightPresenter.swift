//
//  FlightPresenter.swift
//  CleanTest
//
//  Created by Vadim Yushchenko on 24.11.2019.
//  Copyright (c) 2019 Vadim Yushchenko. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol FlightPresentationLogic
{
  func presentFlights(response: Flight.List.Response)
    func presentWeather(response: Flight.GetCity.Response)
}

class FlightPresenter: FlightPresentationLogic
{
    func presentWeather(response: Flight.GetCity.Response) {
        viewController?.showWeather(city: response.city)
    }
    
  weak var viewController: FlightDisplayLogic?
    lazy var numberFormater: NumberFormatter = {
        let formatter = NumberFormatter()
        formatter.usesGroupingSeparator = true
        formatter.numberStyle = .currency
        formatter.locale = Locale.current
        return formatter
    }()
  var cityWorker: CityWorker = CityWorker(filename: "cities")
  
  func presentFlights(response: Flight.List.Response)
  {
    
    let viewFlights = response.flights.map{ Flight.List.ViewModel.Flight(destination: cityWorker[$0.destination] ?? $0.destination, airline: $0.airline, price: numberFormater.string(from: NSNumber(nonretainedObject: $0.price)) ?? "\($0.price)", transfers: $0.transfers == 1 ? "Available transfer": "") }
    let viewModel = Flight.List.ViewModel(flights: viewFlights)
    viewController?.displayFlights(viewModel: viewModel)
  }
    
}
